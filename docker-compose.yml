services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf:ro'
    networks:
      - dev
    depends_on:
      - gin-server

  gin-server:
    build: .
    ports:
      - "8088:8088"
    restart: always
    environment:
      - GIN_MODE=release
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=tracks_db
    networks:
      - dev
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://${SERVER_ADDRESS}:8088 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      
  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8089:8080"  # Swagger UI running on port 8089
    environment:
      - SWAGGER_JSON=/usr/share/nginx/html/swagger.json
    volumes:
      - ./cmd/main/docs/swagger.json:/usr/share/nginx/html/swagger.json
    networks:
      - dev
      
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: tracks_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  dev:

volumes:
  db_data: